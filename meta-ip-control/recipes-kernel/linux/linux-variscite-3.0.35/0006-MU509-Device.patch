diff --git a/arch/arm/mach-mx6/board-mx6q_var_som.c b/arch/arm/mach-mx6/board-mx6q_var_som.c
index 8d81d5f..bb648c8 100644
--- a/arch/arm/mach-mx6/board-mx6q_var_som.c
+++ b/arch/arm/mach-mx6/board-mx6q_var_som.c
@@ -78,9 +78,7 @@
 #include "cpu_op-mx6.h"
 #include "board-mx6q_var_som.h"
 #include "board-mx6solo_var_som.h"
-#if defined(CONFIG_MU509)
-#include <linux/mu509.h>
-#endif
+
 
 /*
  * Un comment if you would like to build uImage for SD-Card that support Android partition table.
@@ -111,11 +109,11 @@
 #define VAR_SOM_SD2_WP          -1
 #endif
 
-#if defined(CONFIG_MU509)
+
 #define VAR_SOM_MU509_POWER     IMX_GPIO_NR(3, 28)
 #define VAR_SOM_MU509_WAKEUPIN  IMX_GPIO_NR(3, 26)
-#define VAR_SOM_MU509_WAKEUPOUT  IMX_GPIO_NR(3, 27)
-#endif
+#define VAR_SOM_MU509_WAKEUPOUT IMX_GPIO_NR(3, 27)
+#define VAR_SOM_MU509_RESET  	IMX_GPIO_NR(3, 21)
 
 #define VAR_SOM_PCIE_DIS_B      IMX_GPIO_NR(3, 21)
 #define VAR_SOM_PCIE_WAKE_B     IMX_GPIO_NR(3, 22)
@@ -474,38 +472,6 @@ static struct spi_board_info mx6_var_som_spi_device[] __initdata = {
 	},
 };
 
-#if defined(CONFIG_MU509)
-static int mu509_io_init(void)
-{
-	return 0;
-}
-
-static int mu509_io_deinit(void)
-{
-	return 0;
-}
-
-
-static struct mu509_data mu509_info = {
-	.io_init = mu509_io_init,
-  	.io_deinit = mu509_io_deinit,
-	.bp_power = VAR_SOM_MU509_POWER,
-	.bp_power_active_low = 1,
-	.bp_reset = -1,//RK29_PIN0_PB3,
-	.bp_reset_active_low = 1,
-	.bp_wakeup_ap = VAR_SOM_MU509_WAKEUPOUT,//RK29_PIN0_PC2,
-	.ap_wakeup_bp = VAR_SOM_MU509_WAKEUPIN,//RK29_PIN0_PB0,
-};
-struct platform_device device_mu509 = {
-		.name = "mu509",
-		.id = -1,
-		.dev		= {
-				.platform_data = &mu509_info,
-		}
-};
-#endif
-
-
 static void spi_device_init(void)
 {
 	if (var_lcd_index != VAR_LCD_CTW6120) {
@@ -648,17 +614,21 @@ static struct i2c_board_info mxc_i2c1_board_info[] __initdata = {
 	{
 		I2C_BOARD_INFO("tlv320aic3x", 0x1b),
 	},
+#ifdef CONFIG_VAR_ORIGIN
 	{
 		I2C_BOARD_INFO("mxc_hdmi_i2c", 0x50),
 	},
-};
+#endif
+	};
 
 static struct i2c_board_info mxc_i2c2_board_info[] __initdata = {
+#ifdef CONFIG_VAR_ORIGIN
 	{
 		I2C_BOARD_INFO("ctw6120", 0x38),
 		.flags = I2C_CLIENT_WAKE,
 		.irq = gpio_to_irq(VAR_SOM_TSC_CTW6120_IRQ_GPIO),
 	},
+#endif
 	{
 		I2C_BOARD_INFO("ds1307", 0x68),
 		.type		= "ds1307",
@@ -1230,7 +1200,7 @@ static void __init mx6_var_som_board_init(void)
 	imx6q_add_lcdif(&lcdif_data);
 	imx6q_add_ldb(&ldb_data);
 	imx6q_add_v4l2_capture(0, &capture_data[0]);
-	imx6q_add_mipi_csi2(&mipi_csi2_pdata);
+	/* TDE imx6q_add_mipi_csi2(&mipi_csi2_pdata);*/
 	voutdev = imx6q_add_v4l2_output(0);
 	if (vout_mem.res_msize && voutdev) {
 		dma_declare_coherent_memory(&voutdev->dev,
@@ -1267,13 +1237,21 @@ static void __init mx6_var_som_board_init(void)
 	}
 
 	gpio_request(VAR_SOM_BACKLIGHT_EN, "ldb-backlight");
-	gpio_direction_output(VAR_SOM_BACKLIGHT_EN, 1);
+	gpio_direction_input(VAR_SOM_BACKLIGHT_EN);
 	gpio_export(VAR_SOM_BACKLIGHT_EN,0);
 
-	/*TDE For GSM Test*/
-	gpio_request(IMX_GPIO_NR(3, 26), "GSM");
-	gpio_direction_output(IMX_GPIO_NR(3, 26), 0);
-	gpio_export(IMX_GPIO_NR(3, 26),0);
+	/*TDE For GSM */
+	gpio_request(VAR_SOM_MU509_POWER, "MU509_POWER");
+	gpio_direction_output(VAR_SOM_MU509_POWER, 0);
+	gpio_export(VAR_SOM_MU509_POWER,1);
+
+	gpio_request(VAR_SOM_MU509_WAKEUPIN, "MU509_WAKEUPIN");
+	gpio_direction_output(VAR_SOM_MU509_WAKEUPIN, 0);
+	gpio_export(VAR_SOM_MU509_WAKEUPIN,1);
+
+	gpio_request(VAR_SOM_MU509_RESET, "MU509_RESET");
+	gpio_direction_output(VAR_SOM_MU509_RESET, 0);
+	gpio_export(VAR_SOM_MU509_RESET,1);
 
 	/*TDE For UART*/
 	gpio_request(IMX_GPIO_NR(4, 7), "RS_RXEN");
@@ -1295,13 +1273,13 @@ static void __init mx6_var_som_board_init(void)
 	imx6q_add_ecspi(2, &mx6q_var_som_spi2_data);
 	spi_device_init();
 
-	imx6q_add_mxc_hdmi(&hdmi_data);
+	/* TDE imx6q_add_mxc_hdmi(&hdmi_data); */
 
 	imx6q_add_anatop_thermal_imx(1, &mx6q_var_som_anatop_thermal_data);
 	imx6_init_fec(fec_data);
 	imx6q_add_pm_imx(0, &mx6q_var_som_pm_data);
 
-	imx6q_add_sdhci_usdhc_imx(1, &mx6q_var_som_sd2_data);
+	/* TDE imx6q_add_sdhci_usdhc_imx(1, &mx6q_var_som_sd2_data);*/
 	imx_add_viv_gpu(&imx6_gpu_data, &imx6q_gpu_pdata);
 	imx6q_var_som_init_usb();
 	/* SATA is not supported by MX6DL/Solo */
@@ -1324,7 +1302,6 @@ static void __init mx6_var_som_board_init(void)
 	imx6q_add_dvfs_core(&var_som_dvfscore_data);
 	imx6q_add_hdmi_soc();
 	imx6q_add_hdmi_soc_dai();
-
 	if (cpu_is_mx6dl()) {
 		imx6dl_add_imx_pxp();
 		imx6dl_add_imx_pxp_client();
@@ -1361,9 +1338,6 @@ static void __init mx6_var_som_board_init(void)
 	pcie_3v3_reset();
 #endif
 
-#if defined(CONFIG_MU509)
-	platform_device_register(&device_mu509)
-#endif
 	imx6q_add_busfreq();
 	imx6q_add_pcie(&mx6_var_som_pcie_data);
 
@@ -1379,7 +1353,6 @@ static void __init mx6_var_som_board_init(void)
 
 	//Set green as start ok
 	gpio_request(IMX_GPIO_NR(6, 2), "GREEN_LED");
-//	gpio_direction_output(IMX_GPIO_NR(6, 0), 0);
 	gpio_direction_output(IMX_GPIO_NR(6, 2), 0);
 	gpio_export(IMX_GPIO_NR(6, 2),1);
 
diff --git a/arch/arm/mach-mx6/board-mx6solo_var_som.h b/arch/arm/mach-mx6/board-mx6solo_var_som.h
index 3c928be..7e32b9b 100644
--- a/arch/arm/mach-mx6/board-mx6solo_var_som.h
+++ b/arch/arm/mach-mx6/board-mx6solo_var_som.h
@@ -42,7 +42,9 @@ static iomux_v3_cfg_t mx6dl_var_som_pads[] = {
 	MX6DL_PAD_CSI0_DATA_EN__GPIO_5_20,
 
 	/* Backlight PWM */
-	MX6DL_PAD_DISP0_DAT9__PWM2_PWMO,
+	//TDE MX6DL_PAD_SD1_CMD__PWM4_PWMO,
+	//MX6DL_PAD_DISP0_DAT9__PWM2_PWMO,
+	MX6DL_PAD_DISP0_DAT9__GPIO_4_30,
 
 	/* CTW6120 IRQ */
 	MX6DL_PAD_EIM_DA7__GPIO_3_7,
@@ -80,7 +82,11 @@ static iomux_v3_cfg_t mx6dl_var_som_pads[] = {
 	MX6DL_PAD_CSI0_DAT11__UART1_RXD,
 
 	/* UART2 for for Bluetooth */
+#ifdef CONFIG_VAR_ORIGIN
 	MX6DL_PAD_EIM_D28__UART2_CTS,
+#else
+	MX6DL_PAD_SD4_DAT5__UART2_CTS,
+#endif
 	MX6DL_PAD_EIM_D29__UART2_RTS,
 	MX6DL_PAD_SD3_DAT4__UART2_RXD,
 	MX6DL_PAD_SD3_DAT5__UART2_TXD,
@@ -100,7 +106,6 @@ static iomux_v3_cfg_t mx6dl_var_som_pads[] = {
 
 	/* Camera MCLK */
 	MX6DL_PAD_GPIO_3__CCM_CLKO2,		
-		
 	/* SDMMC2 CD/WP */
 #ifdef CONFIG_VAR_ORIGIN
 	MX6DL_PAD_KEY_COL4__GPIO_4_14,
@@ -111,6 +116,12 @@ static iomux_v3_cfg_t mx6dl_var_som_pads[] = {
 	/* USBOTG ID pin */
 	MX6DL_PAD_GPIO_4__GPIO_1_4,
 
+	/*MU509 GPRS*/
+	MX6DL_PAD_EIM_D28__GPIO_3_28,
+	MX6DL_PAD_EIM_D26__GPIO_3_26,
+	MX6DL_PAD_EIM_D27__GPIO_3_27,
+	MX6DL_PAD_EIM_D21__GPIO_3_21,
+
 	/* USDHC2 */
 	MX6DL_PAD_SD2_CLK__USDHC2_CLK,
 	MX6DL_PAD_SD2_CMD__USDHC2_CMD,
diff --git a/drivers/net/usb/usbnet.c b/drivers/net/usb/usbnet.c
index b732730..cde1b66 100644
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@ -48,7 +48,6 @@
 #include <linux/pm_runtime.h>
 
 #define DRIVER_VERSION		"22-Aug-2005"
-#define HUAWEI_VENDOR_ID    0x12d1
 
 /*-------------------------------------------------------------------------*/
 
@@ -1469,13 +1468,6 @@ usbnet_probe (struct usb_interface *udev, const struct usb_device_id *prod)
 
 	// ok, it's ready to go.
 	usb_set_intfdata (udev, dev);
-
-/*	if (xdev->descriptor.idVendor == HUAWEI_VENDOR_ID) {
-		if (0 != (xdev->config->desc.bmAttributes & 0x20)) {
-			usb_enable_autosuspend(xdev);
-		}
-	}
-	*/
 	netif_device_attach (net);
 
 	if (dev->driver_info->flags & FLAG_LINK_INTR)
diff --git a/drivers/usb/serial/option.c b/drivers/usb/serial/option.c
index 5c90b67..2134e89 100644
--- a/drivers/usb/serial/option.c
+++ b/drivers/usb/serial/option.c
@@ -1761,12 +1761,12 @@ static int option_probe(struct usb_serial *serial,
 		return -ENODEV;
 
 
-/*	if (serial->dev->descriptor.idVendor == HUAWEI_VENDOR_ID) {
-		if (0 != (serial->dev->config->desc.bmAttributes & 0x20)) {
-			usb_enable_autosuspend(serial->dev);
-		}
-	}
-*/
+//	if (serial->dev->descriptor.idVendor == HUAWEI_VENDOR_ID) {
+//		if (0 != (serial->dev->config->desc.bmAttributes & 0x20)) {
+//			usb_enable_autosuspend(serial->dev);
+//		}
+//	}
+
 	data = serial->private = kzalloc(sizeof(struct usb_wwan_intf_private), GFP_KERNEL);
 	if (!data)
 		return -ENOMEM;
